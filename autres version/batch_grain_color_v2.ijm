//demande un repertoire qui contient les images
//dir = getDirectory("Choose a Directory "); 
dir=getArgument()
// list des fichiers dans le repertoire (doit ne contenir que les images)
list = getFileList(dir); 
// on ne voit pas les operations a l'ecran
setBatchMode(true); 
//Definition des parametres
huemin = 140;
huemax = 155;
minsize = 6000;
mincirc = 0.5;
margin = 100;
erodepth = 30;
median_radius = 5;

// boucle sur les images
for (i=0; i<list.length; i++) { 

	showProgress(i, list.length);
	if (endsWith(list[i],".jpg")){
		open(dir+list[i]);
		//setTool("rectangle");
		getDimensions(width, height, channelCount, sliceCount, frameCount);
		cropx1 = margin;
		cropy1 = margin;
		cropx2 =  width-margin;
		cropy2 =  height-margin;
		makeRectangle(cropx1, cropy1, cropx2, cropy2);
		run("Crop");
		run("Duplicate...", "title="+list[i]+".part.jpg");

			// Color Thresholder 1.44o
			// Autogenerated macro, single images only!
			min=newArray(3);
			max=newArray(3);
			filter=newArray(3);
			a=getTitle();
			run("HSB Stack");
			run("Convert Stack to Images");
			selectWindow("Hue");
			rename("0");
			selectWindow("Saturation");
			rename("1");
			selectWindow("Brightness");
			rename("2");
			min[0]=huemin;
			max[0]=huemax;
			filter[0]="stop";
			min[1]=0;
			max[1]=255;
			filter[1]="pass";
			min[2]=0;
			max[2]=255;
			filter[2]="pass";
			for (j=0;j<3;j++){
			  selectWindow(""+j);
			  setThreshold(min[j], max[j]);
			  run("Convert to Mask");
			  if (filter[j]=="stop")  run("Invert");
			}
			imageCalculator("AND create", "0","1");
			imageCalculator("AND create", "Result of 0","2");
			for (j=0;j<3;j++){
			  selectWindow(""+j);
			  close();
			}
			selectWindow("Result of 0");
			close();
			selectWindow("Result of Result of 0");
			rename(a);
			// Colour Thresholding-------------
		// Median Filter to eliminate single white points
		run("Median...", "radius="+median_radius);
		run("Watershed");
		run("Duplicate...", "title="+list[i]+"backup");
		selectWindow(a);
		run("Set Measurements...", "area mean centroid perimeter bounding fit shape feret's integrated median skewness kurtosis area_fraction stack redirect=None decimal=3");
		run("Analyze Particles...", "size="+minsize+"-Infinity circularity="+mincirc+"-1.00 show=Outlines display exclude clear");
		selectWindow("Drawing of "+a);
		saveAs("Jpeg", dir+"masks/"+list[i]+"main_mask.jpg");
		//close();
		selectWindow("Results");
		saveAs("Text", dir+list[i]+".main.txt");
		close(); 
		selectWindow(list[i]);
		run("Split Channels");
		minsize=minsize/3;
		selectWindow(list[i]+"backup");
		for (e=1; e<erodepth; e++) {
			run("Erode");
		}
		run("Duplicate...", "title="+list[i]+"backup2");
		run("Set Measurements...", "mean redirect='"+list[i]+" (red)' decimal=0");
		run("Analyze Particles...", "size="+minsize+"-Infinity circularity="+mincirc+"-1.00 show=Masks display exclude clear");
		selectWindow("Results");
		saveAs("Text", dir+list[i]+".red.txt");
		close();
		selectWindow(list[i]+"backup");
		run("Duplicate...", "title="+list[i]+"backup3");
		run("Set Measurements...", "mean redirect='"+list[i]+" (green)' decimal=0");
		run("Analyze Particles...", "size="+minsize+"-Infinity circularity="+mincirc+"-1.00 show=Masks display exclude clear");
		selectWindow("Results");
		saveAs("Text", dir+list[i]+".green.txt");
		close();
		selectWindow(list[i]+"backup");
		run("Duplicate...", "title="+list[i]+"backup4");
		run("Set Measurements...", "mean redirect='"+list[i]+" (blue)' decimal=0");
		run("Analyze Particles...", "size="+minsize+"-Infinity circularity="+mincirc+"-1.00 show=Masks display exclude clear");
		saveAs("Jpeg", dir+"masks/"+list[i]+"erode_mask.jpg");
		selectWindow("Results");
		saveAs("Text", dir+list[i]+".blue.txt");
		close();
		while (nImages>0) { 
	          		selectImage(nImages); 
	          		close(); 
      		} 
	}
} 
